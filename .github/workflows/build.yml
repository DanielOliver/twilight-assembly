name: Build
on:
  push:
    branches: [ twilight ]
  pull_request:
    branches: [ twilight ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
        matrix:
            node-version: [17.x]
            dotnet: [ '5.0' ]
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Setup dotnet ${{ matrix.dotnet }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet }}
      # Install and Build
      - run: npm ci
        working-directory: ./TwilightAssembly.Front
        name: NPM install
      - run: npm run build
        working-directory: ./TwilightAssembly.Front
        name: Build Frontend
      # TESTS
      - run: dotnet run --junit-summary junit/dotnet.Core.TestResults.junit.xml
        working-directory: ./TwilightAssembly.Front/tests
        name: Run Core dotnet tests
        if: always()
      - run: npm run test
        working-directory: ./TwilightAssembly.Front
        name: Run Frontend tests
      - run: dotnet run --junit-summary junit/dotnet.Front.TestResults.junit.xml
        working-directory: ./TwilightAssembly.Front/tests
        name: Run Frontend dotnet tests
        if: always()
      # Upload artifacts
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: TestResults
          path: '**/*junit.xml'
      - uses: actions/upload-artifact@v3
        with:
          name: TwilightAssembly.Front
          path: ./TwilightAssembly.Front/dist/

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: './TwilightAssembly.Front/dist'
          production-branch: twilight
          # production-deploy: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: false
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1


  publish-test-results:
    name: "Publish Tests Results"
    needs: build
    runs-on: ubuntu-latest
    permissions:
      checks: write
      # only needed unless run with comment_mode: off
      pull-requests: write
    if: always()
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: TestResults
          name: TestResults
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          junit_files: "artifacts/**/*.xml"
